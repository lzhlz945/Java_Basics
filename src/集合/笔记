1、向Collection中添加数据obj时，不许要实现equals()方法
2、集合和数组互转
   集合转数组用toArray(); 反之 Arrays.asList(new String[]{xx,xx,xx})
   asList() 是Arrays的静态方法； 注意：当数组转换为集合时，类型要为包装类型，不然会看作整体
3、迭代器
  next()、hasNext()、
  next()：1、指针下移 2、下移后把元素返回
4、List
ArrayList：线程不安全 ，底层使用Object[]数组
LinkedList：对于频繁删除和插入比ArrayList效率高，底层使用双向链表
victor:线程安全，底层使用Object[]数组

ArrayList底层
扩容：

list.add(123) elementData[0]=new Integer(123);
jdk 1.7中
如果此次的添加导致底层elementDate数组容量不够则扩容
默认情况下，扩容为原来的容量的1.5倍，同时需要将原有数组中的数据复制到新的数组

jdk 1.8中

object[] elementData初始化为{} 并没有在构造器中创建默认为10
使用add();时才创建长度为10 的数组

特点：1.7中创建类似于单例模式的饿汉式，1.8相当于懒汉式；延迟了数组的创建，节省内存

LinkedList 底层分析
   LinkedList linkedList=new LinkedList();内部申明了first和last属性，默认值为null
   当执行add(123)操作时将123封装到Node中，创建了Node对象
